{
  "$schema": "https://biomejs.dev/schemas/2.2.4/schema.json",
  "vcs": {
    "enabled": false,
    "clientKind": "git",
    "useIgnoreFile": false
  },
  "assist": {
    "enabled": true,
    "actions": {
      "source": {
        "organizeImports": "on"
      }
    }
  },
  "files": {
    "maxSize": 10485760,
    "ignoreUnknown": false,
    "includes": [
      "src/**/*",
      "test/**/*",
      "tsconfig*.json",
      "package.json",
      "biome.json"
    ]
  },
  "formatter": {
    "enabled": true,
    "indentStyle": "tab",
    "indentWidth": 4,
    "useEditorconfig": true,
    "formatWithErrors": false,
    "attributePosition": "auto",
    "bracketSpacing": true,
    "includes": [
      "**"
    ],
    "lineEnding": "lf",
    "lineWidth": 180
  },
  "linter": {
    "enabled": true,
    "rules": {
      "recommended": true,
      "performance": {
        "recommended": true
      },
      "complexity": {
        "noForEach": "off"
      },
      "correctness": {
        "noUnusedVariables": "error",
        "useExhaustiveDependencies": "warn",
        "noUnusedImports": "error"
      },
      "style": {
        "noNonNullAssertion": "info",
        "useAsConstAssertion": "error",
        "noParameterAssign": "error",
        "useDefaultParameterLast": "error",
        "useEnumInitializers": "error",
        "useSelfClosingElements": "error",
        "useSingleVarDeclarator": "error",
        "noUnusedTemplateLiteral": "error",
        "useNumberNamespace": "error",
        "noInferrableTypes": "error",
        "noUselessElse": "error"
      },
      "suspicious": {
        "noConsole": "info",
        "noExplicitAny": "info",
        "noExtraNonNullAssertion": "error",
        "noMisleadingInstantiator": "error",
        "noUnsafeDeclarationMerging": "error",
        "useNamespaceKeyword": "error"
      }
    }
  },
  "javascript": {
    "formatter": {
      "quoteStyle": "double",
      "trailingCommas": "es5",
      "arrowParentheses": "always",
      "bracketSameLine": true,
      "quoteProperties": "preserve",
      "semicolons": "always"
    }
  },
  "json": {
    "formatter": {
      "indentStyle": "space",
      "indentWidth": 2
    }
  }
}